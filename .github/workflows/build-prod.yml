run-name: Build SpaceLabs for Development by @${{ github.actor }}
concurrency: build-${{ github.sha }}

on:
  push:
    branches:
      - main

jobs:
  run_test:
    name: Run Test
    runs-on: ubuntu-18.04
    steps:
      - run: echo "Starting execute unit test"
      - uses: actions/checkout@v3
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'
      - name: Maven Verify
        run: mvn clean verify
      - name: Deploy to branch
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          branch: jacoco-result
          folder: ./target/site/jacoco
  build:
    name: Build
    runs-on: ubuntu-18.04
    needs: run_test
    steps:
      - run: echo "Starting build"
      - uses: actions/checkout@v3
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'
      - name: Maven Build
        run: mvn clean package
      - name: Login to docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: piinalpin/spacelabs-miniproject:latest
  deployment:
    name: Deploy container using SSH
    runs-on: ubuntu-18.04
    needs: build
    steps:
      - run: echo "Starting deploy container"
      - uses: actions/checkout@v3
      - name: Copy environment file via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_SSH_HOST }}
          port: 22
          username: ${{ secrets.EC2_SSH_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          source: dev.env
          target: /home/${{ secrets.EC2_SSH_USERNAME }}
      - name: Deploy using ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_SSH_HOST }}
          port: 22
          username: ${{ secrets.EC2_SSH_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            docker rmi piinalpin/spacelabs-miniproject:latest
            docker pull piinalpin/spacelabs-miniproject:latest
            docker run -d --rm --name spacelabs-miniproject -p 80:8080 --env-file=dev.env --network rawlabs_space piinalpin/spacelabs-miniproject:latest